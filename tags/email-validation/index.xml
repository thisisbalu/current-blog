<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>email validation on Bala Subramanyam Lanka</title>
    <link>https://thisisbalu.github.io/tags/email-validation/</link>
    <description>Recent content in email validation on Bala Subramanyam Lanka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Sep 2014 14:30:54 +0000</lastBuildDate><atom:link href="https://thisisbalu.github.io/tags/email-validation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to validate an email using Regex in Java</title>
      <link>https://thisisbalu.github.io/how-to-validate-an-email-using-regex-in-java/</link>
      <pubDate>Wed, 24 Sep 2014 14:30:54 +0000</pubDate>
      
      <guid>https://thisisbalu.github.io/how-to-validate-an-email-using-regex-in-java/</guid>
      <description>Validating an email address in Java is quite simple with the Regular Expression(regex). I searched for many of the regular expression and found a simple way of validating an email.
REGEX FOR EMAIL VALIDATING&amp;lt;blockquote style=&amp;ldquo;style=&amp;ldquo;font-size: 15px;&amp;quot;&amp;gt;
^[_A-Za-z0-9-]+(.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(.[A-Za-z0-9-]+)*(.[A-Za-z]{2,})$ 
email Validating Tutorial
package com.javaindetail.emailvalidation;import java.util.regex.Matcher;import java.util.regex.Pattern;public class EmailValidationRegex {private static final String EMAIL_VALIDATION_REGEX = &#34;^[_A-Za-z0-9-]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)*(\.[A-Za-z]{2,})$&#34;;private static final String EMAIL1 = &#34;baluatcomputerscience@javaindetail.com&#34;;public static void main(String[] args) {Pattern pattern = Pattern.</description>
    </item>
    
  </channel>
</rss>
