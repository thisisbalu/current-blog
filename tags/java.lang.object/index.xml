<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java.lang.Object on Bala Subramanyam Lanka</title>
    <link>https://thisisbalu.github.io/tags/java.lang.object/</link>
    <description>Recent content in java.lang.Object on Bala Subramanyam Lanka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Aug 2014 16:37:54 +0000</lastBuildDate><atom:link href="https://thisisbalu.github.io/tags/java.lang.object/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to use Object Class Constructor</title>
      <link>https://thisisbalu.github.io/object-java-lang-object/</link>
      <pubDate>Fri, 15 Aug 2014 16:37:54 +0000</pubDate>
      
      <guid>https://thisisbalu.github.io/object-java-lang-object/</guid>
      <description>&lt;p&gt;Before going into the Object constructor let us know what is a constructor?&lt;/p&gt;
&lt;p&gt;A class contains constructors that are invoked to create objects from the class blueprint. Constructor declarations look like method declarations except that they use the name of the class and have no return type.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Object Class - The root of class hierarchy</title>
      <link>https://thisisbalu.github.io/posts/java/object-class-the-root-of-class-hierarchy/</link>
      <pubDate>Thu, 14 Aug 2014 20:16:05 +0000</pubDate>
      
      <guid>https://thisisbalu.github.io/posts/java/object-class-the-root-of-class-hierarchy/</guid>
      <description>&lt;p&gt;Object Class is the root of the class hierarchy in Java. Every class has a Object class as a super class. Hence all the objects extends the methods of this class. Introduced in &lt;strong&gt;JDK1.0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Object class, in the java.lang package, sits at the top of the class hierarchy tree. Every class is a descendant, direct or indirect, of the Object class. Every class you use or write inherits the instance methods of Object. You need not use any of these methods, but, if you choose to do so, you may need to override them with code that is specific to your class. The methods inherited from Object are given below.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
