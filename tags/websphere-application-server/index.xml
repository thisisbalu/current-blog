<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebSphere Application Server on Bala Subramanyam Lanka</title>
    <link>https://thisisbalu.github.io/tags/websphere-application-server/</link>
    <description>Recent content in WebSphere Application Server on Bala Subramanyam Lanka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 May 2016 18:16:30 +0000</lastBuildDate><atom:link href="https://thisisbalu.github.io/tags/websphere-application-server/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IBM WebSphere Application Server Garbage Collection Policies</title>
      <link>https://thisisbalu.github.io/ibm-websphere-application-server-garbage-collection-policies/</link>
      <pubDate>Thu, 12 May 2016 18:16:30 +0000</pubDate>
      
      <guid>https://thisisbalu.github.io/ibm-websphere-application-server-garbage-collection-policies/</guid>
      <description>&lt;p&gt;As long as an object is being referenced, the JVM considers it alive. Once an object is no longer referenced and therefore is not reachable by the application code, the garbage collector removes it and reclaims the unused memory. Java implicitly collects the garbage when objects are no longer referenced or  when Java heap is insufficient and unable to satisfy a request for storage, such as object creation, it automatically triggers garbage collection to free memory.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
